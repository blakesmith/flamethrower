#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), "../lib")

help = <<HELP
Flamethrower is a campfire irc gateway that allows you to talk in campfire with irc.

Basic command line usage:
  flamethrower -c /path/to/config.yml
  flamethrower -t <campfire_api_token> -d campfiredomain

HELP

require 'rubygems'
require 'flamethrower'
require 'optparse'
require 'yaml'

options = {}
opts = OptionParser.new do |opts|
  opts.banner = help

  opts.on("-c", "--config [CONFIG]", "Set the config.yml file") do |config|
    options['config'] = config
  end

  opts.on("-t", "--token [TOKEN]", "Set the campfire API token value") do |token|
    options['token'] = token
  end

  opts.on("-d", "--domain [DOMAIN]", "Set the campfire domain") do |domain|
    options['domain'] = domain
  end

  opts.on("-h", "--host [HOST]", "Sets the listening host") do |host|
    options['host'] = host
  end

  opts.on("-p", "--port [PORT]", "Sets the listening port") do |port|
    options['port'] = port.to_i
  end
end

opts.parse!

load_options_from_file = lambda do |filename, verbose|
  if File.exists?(filename)
    yaml = YAML.load_file(filename)
    yaml.each {|k, v| options[k] = v}
  else
    puts "Unable to load config file!" if verbose
  end
end

if options['config']
  load_options_from_file.call(options['config'], true)
else
  load_options_from_file.call(File.join(ENV["HOME"], '.flamethrower', 'config.yml'), false)
end

FLAMETHROWER_LOGGER = Logger.new(options['logger'] || STDOUT)

server = Flamethrower::EventServer.new(options['host'], options['port'], options['domain'], options['token'])

trap("INT") do
  FLAMETHROWER_LOGGER.info("Received shutdown signal, killing connections")
  server.stop
end

server.start
